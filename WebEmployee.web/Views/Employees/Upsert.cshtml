@model Employee


<div class="card shadow border-0 mt-4" style="background-color:transparent">
    <div class="card-header bg-gradient m-lg-0 py-3" style="background-color:var(--brand-blue)">
        <div class="row">
            <div class="col-3 text-start px-0">
                <a class="btn fw-bold bg-gradient  py-2 text-uppercase" style="background-color:var(--brand-gray); color:var(--brand-orange)"
                   asp-action="Index">
                    ATRAS
                </a>
            </div>
            <div class="col-6 text-center">
                <h2 class="text-white py-2">@(Model.Id != 0 ? "Actualizar" : "Crear") Employee</h2>
            </div>
            <div class="col-3 d-flex justify-content-end align-items-center" style="background-color:transparent">
                <div class="btn-group" role="group">
                    <a href="" class="btn fw-bold" adesign="hotpink"> <i class=" fw-bold bi bi-bell-fill h2"></i></a>
                </div>
            </div>
        </div>
    </div>

    <div class="card-body p-4">
        <form method="post" class="row" enctype="multipart/form-data">
            <input asp-for="@Model.Id" hidden />

            <input id="hCountry" value="@Model.BirthPlaceCountry" hidden/>
            <input id="hState" value="@Model.BirthPlaceState" hidden/>
            <input id="hCity" value="@Model.BirthPlaceCity" hidden/>

            <div class="border p-0" style="background-color:transparent">

                <div class="row">
                    <div class="col-12 col-sm-12 col-lg-4 text-start mb-3" style="background-color:transparent">
                        @*   <div class="mb-2">
                        <img id="img_employee" height="200" width="200" class="border rounded mx-auto d-block img-fluid" />
                        </div> *@
                        @if (Model.EmployeeImages != null && Model.EmployeeImages.Count > 0)
                        {


                            <img src="@Model.EmployeeImages[0].ImageUrl" id="imgClickAndChange" class="d-block w-100 pb-5" alt="...">

                            <div class="row">
                                @foreach (var imageWithIndex in Model.EmployeeImages.Select((image, index) => new { EmployeeImage = image, Index = index, Id = image.Id }))
                                {

                                    <div class="col-2" style="background-color:transparent" id="imageContainer_@imageWithIndex.Index">
                                        @*   <img src="@imageWithIndex.EmployeeImage.ImageUrl" height="30" width="30" onclick="showImageInDiv('@imageWithIndex.EmployeeImage.ImageUrl')" alt="..."> *@
                                        <img src="@imageWithIndex.EmployeeImage.ImageUrl" height="30" width="30"
                                             onclick="showImageInDiv('@imageWithIndex.EmployeeImage.ImageUrl.Replace(@"\", @"\\")')" alt="...">


                                        <br />
                                        <i class="bi bi-trash" onclick="confirmDelete(@imageWithIndex.Id)"></i>

                                    </div>


                                }
                            </div>

                        }
                        @if (Model.Id > 0)
                        {
                            <div class="mb-4">
                                <label asp-for="EmployeeImages" class="form-label">Fotografia del Empleado</label>
                                <input asp-for="EmployeeImages" name="filess" class="form-control" type="file" id="fileEmployee" accept="image/png, image/png, image/jpeg" multiple onchange="previewImagesUpdate()" />
                            </div>

                        }
                        else
                        {
                            <div class="mb-4">
                                <label asp-for="EmployeeImages" class="form-label">Fotografia del Empleado</label>
                                <input asp-for="EmployeeImages" name="filess" class="form-control" type="file" id="fileEmployee" accept="image/png, image/png, image/jpeg" multiple onchange="previewImages()" />
                            </div>
                        }
                        <div class="row" id="imagePreviewRow"></div>

                        <div id="imagePreviewModal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.8); justify-content:center; align-items:center; z-index:9999; overflow:hidden;">
                            <img id="previewImage" src="" style="max-width:90%; max-height:90%;" alt="Preview" />
                            <button type="button" onclick="closeImageModal()" style="position:absolute; top:10px; right:20px; color:white; font-size:24px;">&times;</button>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-4 col-lg-4">

                        <div class="form-floating py-2 col-12">
                            <input asp-for="@Model.Name" class="form-control border-0 shadow" />
                            <label asp-for="@Model.Name" class="ms-2 text-muted"></label>
                            <span asp-validation-for="@Model.Name" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="@Model.Lastname" class="form-control border-0 shadow" />
                            <label asp-for="@Model.Lastname" class="ms-2 text-muted"></label>
                            <span asp-validation-for="@Model.Lastname" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="@Model.EmployeeBadge" class="form-control border-0 shadow" />
                            <label asp-for="@Model.EmployeeBadge" class="ms-2 text-muted"></label>
                            <span asp-validation-for="@Model.EmployeeBadge" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="@Model.NationalId" class="form-control border-0 shadow" />
                            <label asp-for="@Model.NationalId" class="ms-2 text-muted"></label>
                            <span asp-validation-for="@Model.NationalId" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="@Model.DateofBirth" class="form-control border-0 shadow" type="date" id="txtbirthdate" />
                            <label asp-for="@Model.DateofBirth" class="ms-2 text-muted"></label>
                            <span asp-validation-for="@Model.DateofBirth" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-4 col-lg-4">

                        <div class="form-floating py-2 col-12">

                            @*   <select asp-for="PositionId" asp-items="@Model.PositionList" class="form-select border-0 shadow" id="txtposition">
                            <option disabled selected class="text-black">--Seleccionar Posicion--</option>

                            </select>
                            <label asp-for="@Model.Employee.Position" class="ms-2 text-muted"></label> *@

                        </div>
                        <div class="form-floating py-2 col-12">
                            <select asp-for="@Model.BirthPlaceCountry" class="form-control border-0 shadow"></select>
                            <span asp-validation-for="@Model.BirthPlaceCountry" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <select asp-for="@Model.BirthPlaceState" class="form-control border-0 shadow"></select>
                            <span asp-validation-for="@Model.BirthPlaceState" class="text-danger"></span>
                        </div>

                        <div class="form-floating py-2 col-12">
                            <select asp-for="@Model.BirthPlaceCity" class="form-control border-0 shadow"></select>
                            <span asp-validation-for="@Model.BirthPlaceCity" class="text-danger"></span>
                        </div>

                        <div class="form-floating py-2 col-12">
                            <select asp-for="@Model.EmployeeTypeId" class="form-control border-0 shadow select2">
                                <option value="">Select Employee Type</option>
                                @if (ViewBag.EmployeeTypes != null)
                                {
                                    foreach (var item in ViewBag.EmployeeTypes)
                                    {
                                        <option value="@item.Id">@item.Type</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="@Model.EmployeeTypeId" class="text-danger"></span>
                        </div>

                        <div class="form-floating py-2 col-12">
                            <select asp-for="@Model.BossId" class="form-control border-0 shadow select2">
                                <option value="">Select Reporting To</option>
                                @if (ViewBag.Employees != null)
                                {
                                    foreach (var item in ViewBag.Employees)
                                    {
                                        <option value="@item.Id">@item.Name @item.Lastname</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="@Model.BossId" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="row pt-4">

                    <div class="col-6 col-md-6 pb-1">
                        @if (Model.Id != 0)
                        {
                            <button type="submit" buttondesign="blue" class="btn form-control">Update</button>
                            @* <button onclick="mostsrarImagen(@Model.EmployeeImages[4].ImageUrl)" buttondesign="blue" class="btn">Update</button> *@
                        }
                        else
                        {
                            <button type="submit" buttondesign="blue" class="btn form-control">Create</button>
                        }
                    </div>
                    <div class="col-6 col-md-6 pb-1">
                        <a asp-controller="employees" asp-action="Index" adesign="gray" class="btn border form-control">Cancelar</a>
                    </div>
                </div>
                <div asp-validation-summary=All class="text-danger"></div>
            </div>
        </form>

    </div>

</div>
@section Scripts {
    <script>

        // function mostrarImagen(input) {

        //     if (input.files) {
        //         var reader = new FileReader();

        //         reader.onload = function (e) {
        //             $("#img_employee").attr("src", e.target.result).width(200).height(200)
        //         }
        //         reader.readAsDataURL(input.files[0]);
        //     }
        // }


        $(document).ready(function () {

            $('.select2').select2({
                allowClear: true
            });

            $.get("/api/location/countries", function (data) {
                var country = $("#hCountry").val();

                let countries = JSON.parse(data);
                $('#BirthPlaceCountry').empty().append('<option>Select Country</option>');
                $.each(countries, function (key, value) {
                    if (country !== "" && country !== null) {
                        if (value.iso2 === country) {
                            $('#BirthPlaceCountry').append($('<option></option>').val(value.iso2).text(value.name).prop('selected', true));
                        }
                        else {
                            $('#BirthPlaceCountry').append($('<option></option>').val(value.iso2).text(value.name));

                        }
                    }
                    else {
                        $('#BirthPlaceCountry').append($('<option></option>').val(value.iso2).text(value.name));

                    }
                });
                if (country !== "" && country !== null) {
                    $('#BirthPlaceCountry').trigger('change');
                }
              
            });

            $('#BirthPlaceCountry').change(function () {
                var state = $("#hState").val();

                let countryIso = $(this).val();
                if (countryIso) {
                    $.get("/api/location/states/" + countryIso, function (data) {
                        let states = JSON.parse(data);
                        $('#BirthPlaceState').empty().append('<option>Select State</option>');
                        $.each(states, function (key, value) {
                            if (state !== "" && state !== null) {
                                if (state === value.iso2) {
                                    $('#BirthPlaceState').append($('<option></option>').val(value.iso2).text(value.name).prop('selected', true));
                                }
                                else {
                                    $('#BirthPlaceState').append($('<option></option>').val(value.iso2).text(value.name));
                                }
                            }
                            else{
                                                                $('#BirthPlaceState').append($('<option></option>').val(value.iso2).text(value.name));
                            }
                        });

                        if (state !== "" && state !== null) {
                            $('#BirthPlaceState').trigger('change');
                        }
                    });
                }

               
            });

            $('#BirthPlaceState').change(function () {
                var city = $("#hCity").val();

                let countryIso = $('#BirthPlaceCountry').val();
                let stateIso = $(this).val();
                if (countryIso && stateIso) {
                    $.get("/api/location/cities/" + countryIso + "/" + stateIso, function (data) {
                        let cities = JSON.parse(data);
                        $('#BirthPlaceCity').empty().append('<option>Select City</option>');
                        $.each(cities, function (key, value) {
                            if (city !== "" && city !== null) {
                                if (city === value.name) {
                                    $('#BirthPlaceCity').append($('<option></option>').val(value.name).text(value.name).prop('selected', true));
                                }
                                else {
                                    $('#BirthPlaceCity').append($('<option></option>').val(value.name).text(value.name));
                                }
                            }
                            else{
                                $('#BirthPlaceCity').append($('<option></option>').val(value.name).text(value.name));
                            }
                        });
                    });
                }
            });
        });


        function previewImages() {
            const fileInput = document.getElementById('fileEmployee');
            const previewRow = document.getElementById('imagePreviewRow');
            previewRow.innerHTML = '';

            Array.from(fileInput.files).forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imgDiv = document.createElement('div');
                    imgDiv.classList.add('col-2');
                    imgDiv.style.backgroundColor = 'transparent';

                    imgDiv.innerHTML = `
                                    <img src="${e.target.result}" height="30" width="30" onclick="showImage('${e.target.result}')" alt="..."/>
                                    <br>
                                    <i class="bi bi-trash" onclick="removeImage(${index})"></i>
                                `;

                    previewRow.appendChild(imgDiv);
                };
                reader.readAsDataURL(file);
            });
        }


        function removeImage(index) {
            const fileInput = document.getElementById('fileEmployee');
            const dt = new DataTransfer();
            const files = fileInput.files;

            Array.from(files).forEach((file, i) => {
                if (i !== index) {
                    dt.items.add(file);
                }
            });

            fileInput.files = dt.files;
            previewImages();
        }

        function showImage(src) {
            const modal = document.getElementById('imagePreviewModal');
            const modalImage = document.getElementById('previewImage');
            modalImage.src = src;
            modal.style.display = 'flex';
            document.body.style.overflow = 'hidden';
        }

        function closeImageModal() {
            document.getElementById('imagePreviewModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }


        function showImageInDiv(imageUrl) {
            document.getElementById('imgClickAndChange').src = imageUrl;
        }

        function removeImageUpdate(index) {
            document.getElementById('imageContainer_' + index).remove();
        }

        function previewImagesUpdate() {
            var files = document.getElementById('fileEmployee').files;
            var imagePreviewRow = document.getElementById('imagePreviewRow');
            imagePreviewRow.innerHTML = '';

            for (var i = 0; i < files.length; i++) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var imgDiv = document.createElement('div');
                    imgDiv.classList.add('col-2');
                    imgDiv.style.backgroundColor = 'transparent';

                    var img = document.createElement('img');
                    img.src = e.target.result;
                    img.height = 30;
                    img.width = 30;
                    img.onclick = function () {
                        showImage(e.target.result);
                    };

                    var trashIcon = document.createElement('i');
                    trashIcon.classList.add('bi', 'bi-trash');
                    trashIcon.onclick = function () {
                        imgDiv.remove();
                    };

                    imgDiv.appendChild(img);
                    imgDiv.appendChild(document.createElement('br'));
                    imgDiv.appendChild(trashIcon);

                    imagePreviewRow.appendChild(imgDiv);
                }
                reader.readAsDataURL(files[i]);
            }
        }


        function confirmDelete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteEmployeeImage(id);
                }
            })
        }

        function deleteEmployeeImage(id) {
            $.ajax({
                type: 'DELETE',
                url: '/Employees/DeleteImage/' + id,
                success: function (response) {
                    if (response.success) {

                        Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        );
                    } else {
                        Swal.fire(
                            'Error!',
                            response.message,
                            'error'
                        );
                    }
                },
                error: function () {
                    Swal.fire(
                        'Error!',
                        'Something went wrong!',
                        'error'
                    );
                }
            });
        }
    </script>


    @{
        //enable client side validation
                                        <partial name="_ValidationScriptsPartial" />
    }
}